from .api import PlatformDirsABC as PlatformDirsABC
from .version import __version__ as __version__, __version_tuple__ as __version_info__
from _typeshed import Incomplete
from pathlib import Path
from typing import Literal

__all__ = ['AppDirs', 'PlatformDirs', 'PlatformDirsABC', '__version__', '__version_info__', 'site_cache_dir', 'site_cache_path', 'site_config_dir', 'site_config_path', 'site_data_dir', 'site_data_path', 'site_runtime_dir', 'site_runtime_path', 'user_cache_dir', 'user_cache_path', 'user_config_dir', 'user_config_path', 'user_data_dir', 'user_data_path', 'user_desktop_dir', 'user_desktop_path', 'user_documents_dir', 'user_documents_path', 'user_downloads_dir', 'user_downloads_path', 'user_log_dir', 'user_log_path', 'user_music_dir', 'user_music_path', 'user_pictures_dir', 'user_pictures_path', 'user_runtime_dir', 'user_runtime_path', 'user_state_dir', 'user_state_path', 'user_videos_dir', 'user_videos_path']

PlatformDirs: Incomplete
AppDirs = PlatformDirs

def user_data_dir(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, roaming: bool = False, ensure_exists: bool = False) -> str: ...
def site_data_dir(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, multipath: bool = False, ensure_exists: bool = False) -> str: ...
def user_config_dir(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, roaming: bool = False, ensure_exists: bool = False) -> str: ...
def site_config_dir(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, multipath: bool = False, ensure_exists: bool = False) -> str: ...
def user_cache_dir(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, opinion: bool = True, ensure_exists: bool = False) -> str: ...
def site_cache_dir(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, opinion: bool = True, ensure_exists: bool = False) -> str: ...
def user_state_dir(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, roaming: bool = False, ensure_exists: bool = False) -> str: ...
def user_log_dir(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, opinion: bool = True, ensure_exists: bool = False) -> str: ...
def user_documents_dir() -> str: ...
def user_downloads_dir() -> str: ...
def user_pictures_dir() -> str: ...
def user_videos_dir() -> str: ...
def user_music_dir() -> str: ...
def user_desktop_dir() -> str: ...
def user_runtime_dir(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, opinion: bool = True, ensure_exists: bool = False) -> str: ...
def site_runtime_dir(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, opinion: bool = True, ensure_exists: bool = False) -> str: ...
def user_data_path(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, roaming: bool = False, ensure_exists: bool = False) -> Path: ...
def site_data_path(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, multipath: bool = False, ensure_exists: bool = False) -> Path: ...
def user_config_path(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, roaming: bool = False, ensure_exists: bool = False) -> Path: ...
def site_config_path(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, multipath: bool = False, ensure_exists: bool = False) -> Path: ...
def site_cache_path(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, opinion: bool = True, ensure_exists: bool = False) -> Path: ...
def user_cache_path(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, opinion: bool = True, ensure_exists: bool = False) -> Path: ...
def user_state_path(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, roaming: bool = False, ensure_exists: bool = False) -> Path: ...
def user_log_path(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, opinion: bool = True, ensure_exists: bool = False) -> Path: ...
def user_documents_path() -> Path: ...
def user_downloads_path() -> Path: ...
def user_pictures_path() -> Path: ...
def user_videos_path() -> Path: ...
def user_music_path() -> Path: ...
def user_desktop_path() -> Path: ...
def user_runtime_path(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, opinion: bool = True, ensure_exists: bool = False) -> Path: ...
def site_runtime_path(appname: str | None = None, appauthor: str | None | Literal[False] = None, version: str | None = None, opinion: bool = True, ensure_exists: bool = False) -> Path: ...
