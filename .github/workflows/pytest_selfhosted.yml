
# You need to run a self-hosted runner to run this workflow.
# The `mrpro_runner` package is a docker image containing all necessary software
# For automated self-hosted runner registration you need to create an organization fine-granted token
# with the "Administration:write" and "Self-hosted runners:write".
#
# The following variables need to be provided to the runner:
# the 1st positional argument -
# RUNNER_TOKEN - the runner registration token,
# (see https://docs.github.com/en/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-registration-token-for-an-organization)
# the 2nd positional argument -
# GITHUB_OWNER - the organization (PTB-MR) in this particular case.
# the 3d positional argument (optional)
# RUN_ID - if set - the runner starts in ephemeral mode and terminates after run is finished, otherwise - runs in continuous mode.
#
#
# Run with docker:
# docker run --gpus <GPU_ID> ghcr.io/ptb-mr/mrpro_runner:latest RUNNER_TOKEN GITHUB_OWNER [RUN_ID]
#
# Run with singularity:
# You can convert the existing docker container to the singularity container via:
# singularity build --fix-perms mrpro-runner.sif docker://ghcr.io/ptb-mr/mrpro_runner:latest
# Hint: use SINGULARITY_CACHE=... environmental variable for cache
#
# When build is ready you can launch this singularity container via:
# NVIDIA_VISIBLE_DEVICES=<GPU_ID> singularity run --nv --pwd /actions-runner --writable-tmpfs --contain mrpro-runner.sif\
# /actions-runner/entrypoint.sh RUNNER_TOKEN GITHUB_OWNER [RUN_ID]
#
#
# Schedule the cron job for ./github/slurm_cronjob.py to dispatch each job to the isolated singularity container.
name: PyTest-selfhosted

on:
  pull_request:
    types: [labeled]
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests and Coverage Report
    if: >-
      ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
          (github.event_name == 'pull_request' && github.event.label.name == 'pytest-selfhosted') }}
    runs-on: [self-hosted] #gpu
    environment: pytest-cuda

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install MRpro and Dependencies
        run: pip install --upgrade --upgrade-strategy eager .[tests]

      - name: Run PyTest and Generate Coverage Report
        # shell bash sets the -o pipefail
        run: |
          pytest -n 4 -m "cuda" --junitxml=pytest.xml \
          --cov-report=term-missing:skip-covered --cov=mrpro | tee pytest-coverage.txt
        shell: bash

      - name: Upload PyTest Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-selfhosted
          path: |
            pytest-coverage.txt
            pytest.xml

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

  # Cancel in-progress runs when a new workflow with the same group name is triggered
  cancel-in-progress: true
