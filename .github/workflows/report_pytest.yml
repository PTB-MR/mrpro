name: Report PyTest

on:
  workflow_run:
    workflows:
      - PyTest
    types:
      - completed

jobs:
  coverage_report:
    name: Coverage report
    runs-on: ubuntu-latest
    permissions:
      actions: read
      issues: write
      contents: write
      pull-requests: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: pytest-report
      # pytest_data is set in pytest.yml as A=value\nB=value\n...
      - name: Set vars from pytest_data
        run: |
          while IFS= read -r line; do
            echo "$line" >> $GITHUB_ENV
          done < pytest_data

      - name: Post PyTest Coverage Comment
        id: coverage_comment
        uses: MishaKav/pytest-coverage-comment@v1.1.53
        with:
          issue-number: ${{ env.pr-number }}
          pytest-coverage-path: pytest-coverage.txt
          junitxml-path: pytest.xml

      - name: Create Coverage Badge on Main Branch Push
        uses: schneegans/dynamic-badges-action@v1.7.0
        if: ${{ env.event_name == 'push' }} && ${{ env.ref }} == 'refs/heads/main'
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 48e334a10caf60e6708d7c712e56d241
          filename: coverage.json
          label: Coverage Report
          message: ${{ steps.coverage_comment.outputs.coverage }}
          color: ${{ steps.coverage_comment.outputs.color }}
          namedLogo: python
