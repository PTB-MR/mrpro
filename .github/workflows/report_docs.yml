name: Report Docs

on:
  workflow_run:
    workflows:
      - Sphinx Docs
    types:
      - completed

permissions:
  actions: read
  issues: write
  contents: write
  pull-requests: write

jobs:
  docs_report:
    name: Docs report
    runs-on: ubuntu-latest
    outputs:
      artifact-url: ${{ steps.docs.outputs.artifact-url }}
      pr-number: ${{ steps.docs.outputs.pr-number }}
      event-number: ${{ steps.docs.outputs.event-number }}
      event-name: ${{ steps.docs.outputs.event-name }}
      ref: ${{ steps.docs.outputs.ref }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: docs-data

      - name: Parse docs data docs_data.json to outputs
        id: parse_docs_data
        run: |
          echo "artifact-url=$(jq -r '.artifact_url' docs_data.json)" >> $GITHUB_ENV
          echo "pr-number=$(jq -r '.pr_number' docs_data.json)" >> $GITHUB_ENV
          echo "event-number=$(jq -r '.event_number' docs_data.json)" >> $GITHUB_ENV
          echo "event-name=$(jq -r '.event_name' docs_data.json)" >> $GITHUB_ENV
          echo "ref=$(jq -r '.ref' docs_data.json)" >> $GITHUB_ENV

      - name: Set outputs
        id: docs_data
        run: |
          echo "artifact-url=${{ env.artifact-url }}" >> $GITHUB_OUTPUT
          echo "pr-number=${{ env.pr-number }}" >> $GITHUB_OUTPUT
          echo "event-number=${{ env.event-number }}" >> $GITHUB_OUTPUT
          echo "event-name=${{ env.event-name }}" >> $GITHUB_OUTPUT
          echo "ref=${{ env.ref }}" >> $GITHUB_OUTPUT

      - name: Update PR with link to summary
        if: env.event-name == 'pull_request'
        uses: edumserrano/find-create-or-update-comment@v3
        with:
          issue-number: ${{ env.pr-number }}
          body-includes: '<!-- documentation build ${{ env.event-number }} -->'
          comment-author: 'github-actions[bot]'
          body: |
            <!-- documentation build ${{ env.event-number }} -->
            ### :books: Documentation
            :file_folder: [Download as zip](${{ env.artifact-url }})
            :mag: [View online](https://zimf.de/zipserve/${{ env.artifact-url }}/)
          edit-mode: replace

  deploy:
    name: Deploy docs
    runs-on: ubuntu-latest
    needs: docs_report
    # maybe should be test that the parent workflow was successful...
    if: needs.docs_report.outputs.event-name == 'push' && needs.docs_report.outputs.ref == 'refs/heads/main'
    permissions:
        pages: write
        id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download docs artifact
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: Documentation
          path: html_build

      - name: Upload pages
        id: upload_pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: html_build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

